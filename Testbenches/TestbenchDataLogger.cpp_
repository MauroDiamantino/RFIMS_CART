/*
 * TestbenchDataLogger.cpp
 *
 *  Created on: 10/06/2019
 *      Author: new-mauro
 */

#include "SweepProcessing.h"

using namespace std;

int main() throw(CustomException)
{
	DataLogger dataLogger;

	BandParameters oneBandParam;
	std::vector<BandParameters> bandsParamVector;

	oneBandParam.bandNumber=1;
	oneBandParam.detector=0; //rms
	oneBandParam.flagDefaultSamplePoints=false;
	oneBandParam.flagEnable=true;
	oneBandParam.rbw=1e6;
	oneBandParam.vbw=1e6;
	oneBandParam.samplePoints=51;
	oneBandParam.startFreq=900e6;
	oneBandParam.stopFreq=925e6;
	oneBandParam.sweepTime=10000;

	bandsParamVector.push_back(oneBandParam);

	oneBandParam.bandNumber=2;
	oneBandParam.detector=1; //min/max
	oneBandParam.flagDefaultSamplePoints=false;
	oneBandParam.flagEnable=true;
	oneBandParam.rbw=3e6;
	oneBandParam.vbw=3e6;
	oneBandParam.samplePoints=50;
	oneBandParam.startFreq=925e6;
	oneBandParam.stopFreq=950e6;
	oneBandParam.sweepTime=10000;

	bandsParamVector.push_back(oneBandParam);

	dataLogger.SaveBandsParamAsCSV(bandsParamVector);

	FreqValues gain("gain"), noiseFigure("noise figure");
	Sweep sweep;

	std::string timestamp("24-04-2019T19:41:00");
	gain.timeData.SetTimestamp(timestamp);
	noiseFigure.timeData.SetTimestamp(timestamp);
	sweep.timeData.SetTimestamp(timestamp);
	sweep.azimuthAngle=0; sweep.polarization="horizontal";

	std::uint_least64_t freq;
	unsigned int totalNumOfSamples = bandsParamVector[0].samplePoints + bandsParamVector[1].samplePoints;
	for(auto i=0; i<totalNumOfSamples; i++)
	{
		freq = 900e6 + i*50e6/(totalNumOfSamples-1);
		gain.frequencies.push_back(freq);
		gain.values.push_back(-45.0);

		noiseFigure.frequencies.push_back(freq);
		noiseFigure.values.push_back(3.5);

		sweep.frequencies.push_back(freq);
		sweep.values.push_back(-100.0);
	}

	dataLogger.SaveFrontEndParam(gain, noiseFigure);
	dataLogger.SaveSweep(sweep);

	dataLogger.CompressLastFiles();
	dataLogger.DeleteOldFiles();

	dataLogger.UploadData();

	return 0;
}
